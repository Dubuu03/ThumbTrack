<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADA0lEQVRYR7VWPWhTURSufxUFrc6OKrqogw4qDg6CVm0pyEvaqqARKriKqLhkEEERpVtdFQUlLz9U
        uooOQgZp6WI3BUFIl1Cw9ReO3/dyXri5ufHd1JcPPng595zvnNyfc29f1xBZE4QyHhTlXSaUbxGL8jZT
        kjGOqVdvELySddmSPEdC6cBn+bysVff0gX99x5G0hfC5pe7pYnBGNiLBkp3QwTpmql/D0sNoWY46kjmZ
        DeWwhqUHrP2gK5mLWIZTGpYegorscSVz8VxBdmtYuoD4nJ3MwQ/qnj4wtceQ4JeV0ORP7hV17w0yBTmN
        RItWYrLWk7V3YbgiW7JFuYykk2RQkku06XBvcPyNrEcLvoiEN0dKsk3NTdDGMbTkC+yYak4H+IcHIb4A
        xtPNhlTELDwg+a22aBy2j4zR8P8DpxaiFfBPnMCD9K2selkyZRmCQA5TOaAmXkQ7ML23YTdnwuYCfeir
        YYwbgD1HTTUlAwHxLl8BX2DnnzTXFbv9COxTYF05RZsOR7cmY6LYhga1FnU4GXCmqPnPyC+4+++xI6ob
        E20i9WejW4aSh+8nK5asq1sysInuIqBqCZh8jwvnKv8pyW/aLB+TVWqqvCfwukHgI0uohTx6evyc4xFL
        8tD7pTRakEMIeIxpvH9+RrbqGyBewzZ6FLCMGeofmpbN1KR2x+OJ9duFgO/NYN21+J5v2ix6FDAfaYdy
        xrCt4GrfSXsLUNkVw4lTN0I7vmdb7AY9CpiNNKBl2XO0t2CsIPsx0Gw2qHqYdnx3vII9CpijBrUM2++g
        LPtob0PUgEIpweklhbnD8d3xHehRwBJfyeOvZXukC+I0nNV0yUBzueEQbdKjAEHS6yrnD+yHCSQPnYIG
        vQogQylQU+WTgSBXJ2yjdwEN+ndCONesYCe7LKCm8snQY/OvVhyxiwKq8bHuCnhe78X65bFzPztEkwr4
        Ck4i9oDKrR48SijkBDrYU4gux0kcBfzA5p1G0mDiiWzQ8HTBM43b7xqSVY0CqrRxTN080df3F5F/nL0n
        G8ewAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAABNUlEQVRYR+2VPw4BURDGV6dWKDVKtSNIiEpkbSVxA1dxA70/u0cgOIArWFQK0YjKmGe/FTsFb+2+
        yCb7S77mm/fmG28EKycn09hz6vc82vVcOtouNWGbx55QiUOnLHqJB0HZLPxJGxx4iIQHOuCIGQZjKjou
        jTjoLoKVrryONo6mT3dGNQ7ZitBQvjOnOo6mDFHB9mjIITcRGmrZcamM07/BTTZvDdew1RetwvtevNXS
        1t7xqKUGiBSQr/yzrBmQ/2mAiG9Ifx3Af/54yQLykw4Q7FcHeRl2Gi/go9Vn5EXYmR8g2K8O8jLsJAPo
        718hG8BO/AJo8x15GXamB9Dfv0I2gP3rAPH2r5BNYCd6AbTQQzaArfyTrGkq9gCvv2Pe3Qq2xU9ZZW/C
        uoR1DcXbf07O/7GsBy6XrKznN1PmAAAAAElFTkSuQmCC
</value>
  </data>
</root>